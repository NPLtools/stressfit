# -*- coding: utf-8 -*-
"""
Created on Tue May 15 19:44:07 2018

@author: Jan Saroun, saroun@ujf.cas.cz
"""

import numpy as np
import os


inpdir = r'.\tables'
outdir = r'.\output\tables'


def proc_table(name):
    fn1 = 'sample_{}.dat'.format(name)
    fn2 = 'mu_{}.dat'.format(name)    
    hdr = ['# Interaction cross-sections, 1/cm\n']    
    with open(os.path.join(inpdir,fn1), 'r') as f:
        lines = f.readlines()
        hdr.extend(lines[1:5])
    tb = np.loadtxt(os.path.join(inpdir,fn2))    
    outfn = os.path.join(outdir,fn2)
    hdr.append('# wavelength[A]\tsigma_tot[1/cm]\n')
    with open(outfn, 'w') as f:
        fmth = '{}'
        fmtv = '{:g}\t{:g}\n'
        for h in hdr:
            f.write(fmth.format(h))
        for i in range(len(tb)):
            f.write(fmtv.format(*tb[i,0:2]))
    return tb

#%%
"""
Generate tables for stressfit from NCrystal-simres tables.
On input, sample_xxx.dat are the tables used by SIMRES. They 
are generated using the NCrystal software (see the file headers). 
mu_xxx.dat on the input are tables generated by SIMRES, 
using the command REPSA.
"""
names = ['Cu', 'Al', 'Ni', 'Ti', 'Mg', 'Fe_alpha', 'Fe_gamma', 
         'duplex_steel', 'SiO2']

tbl = {}
for name in names:
    tbl[name] = proc_table(name)

#%% Plot selected tables
from matplotlib import pyplot as plt
params = {'legend.fontsize': 'large',
          'figure.figsize': (6, 4),
          'axes.labelsize': 'x-large',
          'axes.titlesize':'x-large',
          'xtick.labelsize':'large',
          'ytick.labelsize':'large'}
plt.rcParams.update(params)

toplot = ['Cu', 'Ni', 'Ti', 'Fe_alpha']
fmts = {'Cu': 'r-',
        'Ni': 'b-',
        'Ti': 'g-',
        'Fe_alpha': 'k-',
        }
fig, ax = plt.subplots() 
for name in toplot:
    d = tbl[name]
    ax.errorbar(d[:,0], d[:,1], fmt = fmts[name], label=name)
ax.set_xlabel(r'wavelength, $\AA$')
ax.set_ylabel('interaction cross-section, 1/cm')
ax.legend(loc='upper left', ncol=2)
ax.set_xlim(1.0, 4.5)
ax.set_ylim(0, 3)
ax.grid()
plt.savefig('mu_tables.png', bbox_inches='tight')
plt.show()


                